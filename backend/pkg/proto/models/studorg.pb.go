// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: models/studorg.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StudorgStatus int32

const (
	StudorgStatus_NOT_OFFICIAL StudorgStatus = 0
	StudorgStatus_OFFICIAL     StudorgStatus = 1
)

// Enum value maps for StudorgStatus.
var (
	StudorgStatus_name = map[int32]string{
		0: "NOT_OFFICIAL",
		1: "OFFICIAL",
	}
	StudorgStatus_value = map[string]int32{
		"NOT_OFFICIAL": 0,
		"OFFICIAL":     1,
	}
)

func (x StudorgStatus) Enum() *StudorgStatus {
	p := new(StudorgStatus)
	*p = x
	return p
}

func (x StudorgStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudorgStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_models_studorg_proto_enumTypes[0].Descriptor()
}

func (StudorgStatus) Type() protoreflect.EnumType {
	return &file_models_studorg_proto_enumTypes[0]
}

func (x StudorgStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudorgStatus.Descriptor instead.
func (StudorgStatus) EnumDescriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{0}
}

type Campus int32

const (
	Campus_MSK          Campus = 0
	Campus_NOV          Campus = 1
	Campus_OTHER_CAMPUS Campus = 2
	Campus_PER          Campus = 3
	Campus_SPB          Campus = 4
)

// Enum value maps for Campus.
var (
	Campus_name = map[int32]string{
		0: "MSK",
		1: "NOV",
		2: "OTHER_CAMPUS",
		3: "PER",
		4: "SPB",
	}
	Campus_value = map[string]int32{
		"MSK":          0,
		"NOV":          1,
		"OTHER_CAMPUS": 2,
		"PER":          3,
		"SPB":          4,
	}
)

func (x Campus) Enum() *Campus {
	p := new(Campus)
	*p = x
	return p
}

func (x Campus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Campus) Descriptor() protoreflect.EnumDescriptor {
	return file_models_studorg_proto_enumTypes[1].Descriptor()
}

func (Campus) Type() protoreflect.EnumType {
	return &file_models_studorg_proto_enumTypes[1]
}

func (x Campus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Campus.Descriptor instead.
func (Campus) EnumDescriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{1}
}

type Faculty int32

const (
	Faculty_BINST         Faculty = 0
	Faculty_BIOLOGY       Faculty = 1
	Faculty_CHEMISTRY     Faculty = 2
	Faculty_CMD           Faculty = 3
	Faculty_CS            Faculty = 4
	Faculty_ECONOMICS     Faculty = 5
	Faculty_GEOGRAPHY     Faculty = 6
	Faculty_GOROD         Faculty = 7
	Faculty_GSB           Faculty = 8
	Faculty_HUM           Faculty = 9
	Faculty_ICEF          Faculty = 10
	Faculty_INMAN         Faculty = 11
	Faculty_ISSEK         Faculty = 12
	Faculty_LANG          Faculty = 13
	Faculty_LAW           Faculty = 14
	Faculty_MATH          Faculty = 15
	Faculty_MIEM          Faculty = 16
	Faculty_OTHER_FACULTY Faculty = 17
	Faculty_PHYSICS       Faculty = 18
	Faculty_PRAVO         Faculty = 19
	Faculty_SOCIAL        Faculty = 20
	Faculty_WE            Faculty = 21
)

// Enum value maps for Faculty.
var (
	Faculty_name = map[int32]string{
		0:  "BINST",
		1:  "BIOLOGY",
		2:  "CHEMISTRY",
		3:  "CMD",
		4:  "CS",
		5:  "ECONOMICS",
		6:  "GEOGRAPHY",
		7:  "GOROD",
		8:  "GSB",
		9:  "HUM",
		10: "ICEF",
		11: "INMAN",
		12: "ISSEK",
		13: "LANG",
		14: "LAW",
		15: "MATH",
		16: "MIEM",
		17: "OTHER_FACULTY",
		18: "PHYSICS",
		19: "PRAVO",
		20: "SOCIAL",
		21: "WE",
	}
	Faculty_value = map[string]int32{
		"BINST":         0,
		"BIOLOGY":       1,
		"CHEMISTRY":     2,
		"CMD":           3,
		"CS":            4,
		"ECONOMICS":     5,
		"GEOGRAPHY":     6,
		"GOROD":         7,
		"GSB":           8,
		"HUM":           9,
		"ICEF":          10,
		"INMAN":         11,
		"ISSEK":         12,
		"LANG":          13,
		"LAW":           14,
		"MATH":          15,
		"MIEM":          16,
		"OTHER_FACULTY": 17,
		"PHYSICS":       18,
		"PRAVO":         19,
		"SOCIAL":        20,
		"WE":            21,
	}
)

func (x Faculty) Enum() *Faculty {
	p := new(Faculty)
	*p = x
	return p
}

func (x Faculty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Faculty) Descriptor() protoreflect.EnumDescriptor {
	return file_models_studorg_proto_enumTypes[2].Descriptor()
}

func (Faculty) Type() protoreflect.EnumType {
	return &file_models_studorg_proto_enumTypes[2]
}

func (x Faculty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Faculty.Descriptor instead.
func (Faculty) EnumDescriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{2}
}

type Language int32

const (
	Language_AR Language = 0
	Language_DE Language = 1
	Language_EN Language = 2
	Language_ES Language = 3
	Language_FR Language = 4
	Language_HI Language = 5
	Language_IT Language = 6
	Language_JA Language = 7
	Language_KO Language = 8
	Language_RU Language = 9
	Language_ZH Language = 10
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0:  "AR",
		1:  "DE",
		2:  "EN",
		3:  "ES",
		4:  "FR",
		5:  "HI",
		6:  "IT",
		7:  "JA",
		8:  "KO",
		9:  "RU",
		10: "ZH",
	}
	Language_value = map[string]int32{
		"AR": 0,
		"DE": 1,
		"EN": 2,
		"ES": 3,
		"FR": 4,
		"HI": 5,
		"IT": 6,
		"JA": 7,
		"KO": 8,
		"RU": 9,
		"ZH": 10,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_models_studorg_proto_enumTypes[3].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_models_studorg_proto_enumTypes[3]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{3}
}

type StudorgRole int32

const (
	StudorgRole_HEAD        StudorgRole = 0
	StudorgRole_ORGANIZER   StudorgRole = 1
	StudorgRole_PARTICIPANT StudorgRole = 2
)

// Enum value maps for StudorgRole.
var (
	StudorgRole_name = map[int32]string{
		0: "HEAD",
		1: "ORGANIZER",
		2: "PARTICIPANT",
	}
	StudorgRole_value = map[string]int32{
		"HEAD":        0,
		"ORGANIZER":   1,
		"PARTICIPANT": 2,
	}
)

func (x StudorgRole) Enum() *StudorgRole {
	p := new(StudorgRole)
	*p = x
	return p
}

func (x StudorgRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudorgRole) Descriptor() protoreflect.EnumDescriptor {
	return file_models_studorg_proto_enumTypes[4].Descriptor()
}

func (StudorgRole) Type() protoreflect.EnumType {
	return &file_models_studorg_proto_enumTypes[4]
}

func (x StudorgRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudorgRole.Descriptor instead.
func (StudorgRole) EnumDescriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{4}
}

type StudorgID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *StudorgID) Reset() {
	*x = StudorgID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudorgID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudorgID) ProtoMessage() {}

func (x *StudorgID) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudorgID.ProtoReflect.Descriptor instead.
func (*StudorgID) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{0}
}

func (x *StudorgID) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type StudorgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campus             Campus        `protobuf:"varint,1,opt,name=campus,proto3,enum=studorg.Campus" json:"campus,omitempty"`
	CreatedAt          string        `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Description        string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Faculty            Faculty       `protobuf:"varint,4,opt,name=faculty,proto3,enum=studorg.Faculty" json:"faculty,omitempty"`
	Language           Language      `protobuf:"varint,5,opt,name=language,proto3,enum=studorg.Language" json:"language,omitempty"`
	Links              []*Links      `protobuf:"bytes,6,rep,name=links,proto3" json:"links,omitempty"`
	Logo               string        `protobuf:"bytes,7,opt,name=logo,proto3" json:"logo,omitempty"`
	Name               string        `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription   string        `protobuf:"bytes,9,opt,name=shortDescription,proto3" json:"shortDescription,omitempty"`
	Status             StudorgStatus `protobuf:"varint,10,opt,name=status,proto3,enum=studorg.StudorgStatus" json:"status,omitempty"`
	Tags               []*Tag        `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	ParticipantsNumber int64         `protobuf:"varint,12,opt,name=participantsNumber,proto3" json:"participantsNumber,omitempty"`
	Head               *User         `protobuf:"bytes,13,opt,name=head,proto3" json:"head,omitempty"`
	Contacts           []*Contact    `protobuf:"bytes,14,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *StudorgInfo) Reset() {
	*x = StudorgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudorgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudorgInfo) ProtoMessage() {}

func (x *StudorgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudorgInfo.ProtoReflect.Descriptor instead.
func (*StudorgInfo) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{1}
}

func (x *StudorgInfo) GetCampus() Campus {
	if x != nil {
		return x.Campus
	}
	return Campus_MSK
}

func (x *StudorgInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StudorgInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StudorgInfo) GetFaculty() Faculty {
	if x != nil {
		return x.Faculty
	}
	return Faculty_BINST
}

func (x *StudorgInfo) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_AR
}

func (x *StudorgInfo) GetLinks() []*Links {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *StudorgInfo) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *StudorgInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudorgInfo) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *StudorgInfo) GetStatus() StudorgStatus {
	if x != nil {
		return x.Status
	}
	return StudorgStatus_NOT_OFFICIAL
}

func (x *StudorgInfo) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StudorgInfo) GetParticipantsNumber() int64 {
	if x != nil {
		return x.ParticipantsNumber
	}
	return 0
}

func (x *StudorgInfo) GetHead() *User {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *StudorgInfo) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type Studorg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *StudorgID   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StudorgInfo *StudorgInfo `protobuf:"bytes,2,opt,name=studorg_info,json=studorgInfo,proto3" json:"studorg_info,omitempty"`
}

func (x *Studorg) Reset() {
	*x = Studorg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Studorg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Studorg) ProtoMessage() {}

func (x *Studorg) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Studorg.ProtoReflect.Descriptor instead.
func (*Studorg) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{2}
}

func (x *Studorg) GetID() *StudorgID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Studorg) GetStudorgInfo() *StudorgInfo {
	if x != nil {
		return x.StudorgInfo
	}
	return nil
}

type Studorgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studorgs []*Studorg `protobuf:"bytes,1,rep,name=studorgs,proto3" json:"studorgs,omitempty"`
}

func (x *Studorgs) Reset() {
	*x = Studorgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Studorgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Studorgs) ProtoMessage() {}

func (x *Studorgs) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Studorgs.ProtoReflect.Descriptor instead.
func (*Studorgs) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{3}
}

func (x *Studorgs) GetStudorgs() []*Studorg {
	if x != nil {
		return x.Studorgs
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{4}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Tags) Reset() {
	*x = Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{5}
}

func (x *Tags) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Info string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{6}
}

func (x *Contact) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Contact) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserStudorg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studorg       *Studorg    `protobuf:"bytes,1,opt,name=studorg,proto3" json:"studorg,omitempty"`
	Role          StudorgRole `protobuf:"varint,2,opt,name=role,proto3,enum=studorg.StudorgRole" json:"role,omitempty"`
	AdmissionTime string      `protobuf:"bytes,3,opt,name=admissionTime,proto3" json:"admissionTime,omitempty"`
}

func (x *UserStudorg) Reset() {
	*x = UserStudorg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStudorg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStudorg) ProtoMessage() {}

func (x *UserStudorg) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStudorg.ProtoReflect.Descriptor instead.
func (*UserStudorg) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{7}
}

func (x *UserStudorg) GetStudorg() *Studorg {
	if x != nil {
		return x.Studorg
	}
	return nil
}

func (x *UserStudorg) GetRole() StudorgRole {
	if x != nil {
		return x.Role
	}
	return StudorgRole_HEAD
}

func (x *UserStudorg) GetAdmissionTime() string {
	if x != nil {
		return x.AdmissionTime
	}
	return ""
}

type UserStudorgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studorgs []*UserStudorg `protobuf:"bytes,1,rep,name=studorgs,proto3" json:"studorgs,omitempty"`
}

func (x *UserStudorgs) Reset() {
	*x = UserStudorgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_studorg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStudorgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStudorgs) ProtoMessage() {}

func (x *UserStudorgs) ProtoReflect() protoreflect.Message {
	mi := &file_models_studorg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStudorgs.ProtoReflect.Descriptor instead.
func (*UserStudorgs) Descriptor() ([]byte, []int) {
	return file_models_studorg_proto_rawDescGZIP(), []int{8}
}

func (x *UserStudorgs) GetStudorgs() []*UserStudorg {
	if x != nil {
		return x.Studorgs
	}
	return nil
}

var File_models_studorg_proto protoreflect.FileDescriptor

var file_models_studorg_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x1a,
	0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x9a, 0x04, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x07, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x46, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x52, 0x07, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x6f, 0x72, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x22, 0x66, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x12, 0x22, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x37, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x74,
	0x75, 0x64, 0x6f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x53, 0x74, 0x75,
	0x64, 0x6f, 0x72, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72,
	0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x73, 0x22, 0x19, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x3d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64,
	0x6f, 0x72, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x6f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x6f,
	0x72, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x52, 0x08, 0x73, 0x74, 0x75,
	0x64, 0x6f, 0x72, 0x67, 0x73, 0x2a, 0x2f, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x46,
	0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x46, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x2a, 0x3e, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x56,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4d, 0x50,
	0x55, 0x53, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x45, 0x52, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x50, 0x42, 0x10, 0x04, 0x2a, 0x82, 0x02, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x49, 0x4e, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x49, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48,
	0x45, 0x4d, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4d, 0x44,
	0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x43,
	0x4f, 0x4e, 0x4f, 0x4d, 0x49, 0x43, 0x53, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4f,
	0x47, 0x52, 0x41, 0x50, 0x48, 0x59, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x4f, 0x52, 0x4f,
	0x44, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x53, 0x42, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03,
	0x48, 0x55, 0x4d, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x43, 0x45, 0x46, 0x10, 0x0a, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4d, 0x41, 0x4e, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x53,
	0x53, 0x45, 0x4b, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x41, 0x4e, 0x47, 0x10, 0x0d, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x41, 0x57, 0x10, 0x0e, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x54, 0x48,
	0x10, 0x0f, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x49, 0x45, 0x4d, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x10, 0x11, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x48, 0x59, 0x53, 0x49, 0x43, 0x53, 0x10, 0x12, 0x12, 0x09, 0x0a, 0x05,
	0x50, 0x52, 0x41, 0x56, 0x4f, 0x10, 0x13, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x4c, 0x10, 0x14, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x45, 0x10, 0x15, 0x2a, 0x62, 0x0a, 0x08, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x52, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x44, 0x45, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x4e, 0x10, 0x02, 0x12,
	0x06, 0x0a, 0x02, 0x45, 0x53, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x52, 0x10, 0x04, 0x12,
	0x06, 0x0a, 0x02, 0x48, 0x49, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x54, 0x10, 0x06, 0x12,
	0x06, 0x0a, 0x02, 0x4a, 0x41, 0x10, 0x07, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4f, 0x10, 0x08, 0x12,
	0x06, 0x0a, 0x02, 0x52, 0x55, 0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x5a, 0x48, 0x10, 0x0a, 0x2a,
	0x37, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x6f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x47, 0x41,
	0x4e, 0x49, 0x5a, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x75, 0x62, 0x72, 0x6f, 0x76, 0x45, 0x76, 0x61,
	0x2f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_studorg_proto_rawDescOnce sync.Once
	file_models_studorg_proto_rawDescData = file_models_studorg_proto_rawDesc
)

func file_models_studorg_proto_rawDescGZIP() []byte {
	file_models_studorg_proto_rawDescOnce.Do(func() {
		file_models_studorg_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_studorg_proto_rawDescData)
	})
	return file_models_studorg_proto_rawDescData
}

var file_models_studorg_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_models_studorg_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_models_studorg_proto_goTypes = []interface{}{
	(StudorgStatus)(0),   // 0: studorg.StudorgStatus
	(Campus)(0),          // 1: studorg.Campus
	(Faculty)(0),         // 2: studorg.Faculty
	(Language)(0),        // 3: studorg.Language
	(StudorgRole)(0),     // 4: studorg.StudorgRole
	(*StudorgID)(nil),    // 5: studorg.StudorgID
	(*StudorgInfo)(nil),  // 6: studorg.StudorgInfo
	(*Studorg)(nil),      // 7: studorg.Studorg
	(*Studorgs)(nil),     // 8: studorg.Studorgs
	(*Tag)(nil),          // 9: studorg.Tag
	(*Tags)(nil),         // 10: studorg.Tags
	(*Contact)(nil),      // 11: studorg.Contact
	(*UserStudorg)(nil),  // 12: studorg.UserStudorg
	(*UserStudorgs)(nil), // 13: studorg.UserStudorgs
	(*Links)(nil),        // 14: common.Links
	(*User)(nil),         // 15: user.User
}
var file_models_studorg_proto_depIdxs = []int32{
	1,  // 0: studorg.StudorgInfo.campus:type_name -> studorg.Campus
	2,  // 1: studorg.StudorgInfo.faculty:type_name -> studorg.Faculty
	3,  // 2: studorg.StudorgInfo.language:type_name -> studorg.Language
	14, // 3: studorg.StudorgInfo.links:type_name -> common.Links
	0,  // 4: studorg.StudorgInfo.status:type_name -> studorg.StudorgStatus
	9,  // 5: studorg.StudorgInfo.tags:type_name -> studorg.Tag
	15, // 6: studorg.StudorgInfo.head:type_name -> user.User
	11, // 7: studorg.StudorgInfo.contacts:type_name -> studorg.Contact
	5,  // 8: studorg.Studorg.ID:type_name -> studorg.StudorgID
	6,  // 9: studorg.Studorg.studorg_info:type_name -> studorg.StudorgInfo
	7,  // 10: studorg.Studorgs.studorgs:type_name -> studorg.Studorg
	9,  // 11: studorg.Tags.tags:type_name -> studorg.Tag
	15, // 12: studorg.Contact.user:type_name -> user.User
	7,  // 13: studorg.UserStudorg.studorg:type_name -> studorg.Studorg
	4,  // 14: studorg.UserStudorg.role:type_name -> studorg.StudorgRole
	12, // 15: studorg.UserStudorgs.studorgs:type_name -> studorg.UserStudorg
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_models_studorg_proto_init() }
func file_models_studorg_proto_init() {
	if File_models_studorg_proto != nil {
		return
	}
	file_models_user_proto_init()
	file_models_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_studorg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudorgID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudorgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Studorg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Studorgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStudorg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_studorg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStudorgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_studorg_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_studorg_proto_goTypes,
		DependencyIndexes: file_models_studorg_proto_depIdxs,
		EnumInfos:         file_models_studorg_proto_enumTypes,
		MessageInfos:      file_models_studorg_proto_msgTypes,
	}.Build()
	File_models_studorg_proto = out.File
	file_models_studorg_proto_rawDesc = nil
	file_models_studorg_proto_goTypes = nil
	file_models_studorg_proto_depIdxs = nil
}
